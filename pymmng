#!/usr/bin/python
# -*- coding: utf-8 -*-

from PyQt4.QtCore import *
from PyQt4.QtGui import *
import subprocess

class MainWindow(QWidget): 
    def __init__(self): 
        demods  = subprocess.check_output("multimon-ng -h 2>&1|grep demodulators:|cut -d: -f2", shell=True)
        if(demods == ""):
            print "Unable to run multimon-ng, please make sure it's installed"
            exit(-1)
        
        modes = demods.strip().split(" ")
        #["POCSAG512","POCSAG1200","POCSAG2400","EAS","UFSK1200","CLIPFSK","AFSK1200","AFSK2400","AFSK2400_2","AFSK2400_3","HAPN4800","FSK9600","DTMF","ZVEI1","ZVEI2","ZVEI3","DZVEI","PZVEI","EEA","EIA","CCIR","MORSE","CW"]
        QWidget.__init__(self) 
        #self.setGeometry(250, 150, 400, 300) 
        self.setWindowTitle("MultiMon-ng Gui")         
        tab_widget = QTabWidget() 
        model = QStandardItemModel()
        tabs = []
        edits = []
        vboxen = []
        for n in modes:
            if(n!="SCOPE"):            
                item = QStandardItem('%s' % n)
                check = Qt.Checked
                item.setCheckState(check)
                item.setCheckable(True)
                model.appendRow(item)
                tabs.append( QWidget() )
                sz = len(tabs)-1;
                tab_widget.addTab(tabs[sz],n) 
                edits.append(QPlainTextEdit())
                vboxen.append(QVBoxLayout())
                vboxen[sz].addWidget(edits[sz])
                tabs[sz].setLayout(vboxen[sz])

        view = QListView()
        view.setMaximumWidth(150)
        view.setModel(model)
        hbox = QHBoxLayout()
        hbox.addWidget(view)      
        hbox.addWidget(tab_widget) 
        self.setLayout(hbox)      

        
app = QApplication([]) 
frame = MainWindow() 
frame.show() 
app.exec_()